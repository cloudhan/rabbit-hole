load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# bazel_skylib
http_archive(
    name = "bazel_skylib",
    sha256 = "74d544d96f4a5bb630d465ca8bbcfe231e3594e5aae57e1edbf17a6eb3ca2506",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
    ],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

# compile_commands.json generator, just run bazel run @hedron_compile_commands//:refresh_all -- --config=linux
http_archive(
    name = "hedron_compile_commands",
    sha256 = "d41604528e5655cb77cced6d11481c2ac4072fe1cc9ae10b2ded8bd04ba23019",
    strip_prefix = "bazel-compile-commands-extractor-928eb070ac19531b8971d347cb6962f6b2ff6b2a",
    url = "https://github.com/hedronvision/bazel-compile-commands-extractor/archive/928eb070ac19531b8971d347cb6962f6b2ff6b2a.tar.gz",
)

load("@hedron_compile_commands//:workspace_setup.bzl", "hedron_compile_commands_setup")

hedron_compile_commands_setup()

# rules_foreign_cc
http_archive(
    name = "rules_foreign_cc",
    sha256 = "2a4d07cd64b0719b39a7c12218a3e507672b82a97b98c6a89d38565894cf7c51",
    strip_prefix = "rules_foreign_cc-0.9.0",
    url = "https://github.com/bazelbuild/rules_foreign_cc/archive/refs/tags/0.9.0.tar.gz",
)

load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")

rules_foreign_cc_dependencies()

# rules_cuda
http_archive(
    name = "rules_cuda",
    sha256 = "fa1462c4c3104de44489800a1da055f55afa57795789539c835e069818786f71",
    strip_prefix = "rules_cuda-cab1fa2dd0e1f8489f566c91a5025856cf5ae572",
    urls = ["https://github.com/bazel-contrib/rules_cuda/archive/cab1fa2dd0e1f8489f566c91a5025856cf5ae572.tar.gz"],
)

load("@rules_cuda//cuda:repositories.bzl", "register_detected_cuda_toolchains", "rules_cuda_dependencies")

rules_cuda_dependencies()

register_detected_cuda_toolchains()

# blis
http_archive(
    name = "com_github_flame_blis",
    build_file_content = """
filegroup(
    name = "blis_all_files",
    srcs = glob(["**/*"]),
    visibility = ["//visibility:public"],
)
    """,
    sha256 = "607ca46013ecfab700ae6a0f1195592be776a7247b7ea0211a4e30b6cc66b8b1",
    strip_prefix = "blis-14c86f66b20901b60ee276da355c1b62642c18d2",
    urls = ["https://github.com/flame/blis/archive/14c86f66b20901b60ee276da355c1b62642c18d2.tar.gz"],
    workspace_file_content = "",
)

# cutlass/cute
http_archive(
    name = "com_github_nvidia_cutlass",
    build_file_content = """package(default_visibility = ["//visibility:public"])

cc_library(
    name = "cutlass",
    hdrs = glob([
        "include/cute/**/*.hpp",
        "include/cutlass/**/*.h",
    ]),
    includes = ["include"],
)
""",
    sha256 = "55df1da3b45b8d7e37581aa5200dd0032db8378ce4cbd5f19eb3cd368dfcff62",
    strip_prefix = "cutlass-ff02da266713bd3365aed65c552412e126c040cb",
    urls = ["https://github.com/NVIDIA/cutlass/archive/ff02da266713bd3365aed65c552412e126c040cb.tar.gz"],
    workspace_file_content = "",
)

# pybind11
http_archive(
    name = "pybind11_bazel",
    sha256 = "a2b107b06ffe1049696e132d39987d80e24d73b131d87f1af581c2cb271232f8",
    strip_prefix = "pybind11_bazel-faf56fb3df11287f26dbc66fdedf60a2fc2c6631",
    urls = ["https://github.com/pybind/pybind11_bazel/archive/faf56fb3df11287f26dbc66fdedf60a2fc2c6631.tar.gz"],
)

# We still require the pybind library.
http_archive(
    name = "pybind11",
    build_file = "@pybind11_bazel//:pybind11.BUILD",
    sha256 = "111014b516b625083bef701df7880f78c2243835abdb263065b6b59b960b6bad",
    strip_prefix = "pybind11-2.10.1",
    urls = ["https://github.com/pybind/pybind11/archive/v2.10.1.tar.gz"],
)

load("@pybind11_bazel//:python_configure.bzl", "python_configure")

python_configure(name = "local_config_python")
